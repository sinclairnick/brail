import z from "zod";

export interface CanIEmailData {
  api_version: string;
  last_update_date: string;
  nicenames: Nicenames;
  data: FeatureData[];
}

export interface Nicenames {
  family: { [key in Family]: string };
  platform: { [key in Platform]: string };
  support: { [key in Support]: string };
  category: { [key in Category]: string };
}

export const Family = z.enum([
  "apple-mail",
  "gmail",
  "outlook",
  "yahoo",
  "microsoft",
  "thunderbird",
  "aol",
  "samsung-email",
  "sfr",
  "orange",
  "protonmail",
  "hey",
  "mail-ru",
  "fastmail",
  "laposte",
  "t-online-de",
  "free-fr",
  "gmx",
  "web-de",
  "ionos-1and1",
]);

export type Family = z.infer<typeof Family>;

export const Platform = z.enum([
  "desktop-app",
  "desktop-webmail",
  "mobile-webmail",
  "webmail",
  "ios",
  "android",
  "windows",
  "macos",
  "windows-mail",
  "outlook-com",
]);

export type Platform = z.infer<typeof Platform>;

export const Support = z.enum([
  "supported",
  "mitigated",
  "unsupported",
  "unknown",
  "mixed",
]);

export type Support = z.infer<typeof Support>;

export const Category = z.enum(["html", "css", "image", "others"]);

export type Category = z.infer<typeof Category>;

export interface FeatureData {
  slug: string;
  title: string;
  description?: string;
  url: string;
  category: string;
  tags: string[];
  keywords?: string;
  last_test_date: string;
  test_url: string;
  test_results_url?: string;
  stats: Stats;
  notes?: string;
  notes_by_num?: NotesByNum;
}

export const VersionMap = z.record(z.string(), z.enum(["y", "n"]));

export type VersionMap = z.infer<typeof VersionMap>;

export const FamilyPlatformSupport = z.record(
  Platform,
  z.record(z.string(), z.string().optional())
);

export type FamilyPlatformSupport = z.infer<typeof FamilyPlatformSupport>;

export const Stats = z.record(Family, FamilyPlatformSupport);
export type Stats = z.infer<typeof Stats>;

export const NotesByNum = z.record(z.string(), z.string());
export type NotesByNum = z.infer<typeof NotesByNum>;

export const Feature = z.enum([
  "amp",
  "bimi",
  "css-accent-color",
  "css-align-items",
  "css-animation",
  "css-aspect-ratio",
  "css-at-font-face",
  "css-at-import",
  "css-at-keyframes",
  "css-at-media-device-pixel-ratio",
  "css-at-media-hover",
  "css-at-media-orientation",
  "css-at-media-prefers-color-scheme",
  "css-at-media-prefers-reduced-motion",
  "css-at-media",
  "css-at-supports",
  "css-background-blend-mode",
  "css-background-clip",
  "css-background-color",
  "css-background-image",
  "css-background-origin",
  "css-background-position",
  "css-background-repeat",
  "css-background-size",
  "css-background",
  "css-block-inline-size",
  "css-border-image",
  "css-border-inline-block-individual",
  "css-border-inline-block-longhand",
  "css-border-inline-block",
  "css-border-radius-logical",
  "css-border-radius",
  "css-border",
  "css-box-shadow",
  "css-box-sizing",
  "css-caption-side",
  "css-clip-path",
  "css-column-count",
  "css-column-layout-properties",
  "css-conic-gradient",
  "css-direction",
  "css-display-flex",
  "css-display-grid",
  "css-display-none",
  "css-display",
  "css-filter",
  "css-flex-direction",
  "css-flex-wrap",
  "css-float",
  "css-font-kerning",
  "css-font-weight",
  "css-font",
  "css-function-clamp",
  "css-function-max",
  "css-function-min",
  "css-gap",
  "css-grid-template",
  "css-height",
  "css-hyphens",
  "css-important",
  "css-inline-size",
  "css-intrinsic-size",
  "css-justify-content",
  "css-left-right-top-bottom",
  "css-letter-spacing",
  "css-line-height",
  "css-linear-gradient",
  "css-list-style-image",
  "css-list-style-position",
  "css-list-style-type",
  "css-list-style",
  "css-margin-block-start-end",
  "css-margin-inline-block",
  "css-margin-inline-start-end",
  "css-margin-inline",
  "css-margin",
  "css-max-block-size",
  "css-max-height",
  "css-max-width",
  "css-min-height",
  "css-min-inline-size",
  "css-min-width",
  "css-mix-blend-mode",
  "css-object-fit",
  "css-object-position",
  "css-opacity",
  "css-outline-offset",
  "css-outline",
  "css-overflow-wrap",
  "css-overflow",
  "css-padding-block-start-end",
  "css-padding-inline-block",
  "css-padding-inline-start-end",
  "css-padding",
  "css-position",
  "css-pseudo-class-active",
  "css-pseudo-class-checked",
  "css-pseudo-class-first-child",
  "css-pseudo-class-first-of-type",
  "css-pseudo-class-focus",
  "css-pseudo-class-has",
  "css-pseudo-class-hover",
  "css-pseudo-class-lang",
  "css-pseudo-class-last-child",
  "css-pseudo-class-last-of-type",
  "css-pseudo-class-link",
  "css-pseudo-class-not",
  "css-pseudo-class-nth-child",
  "css-pseudo-class-nth-last-child",
  "css-pseudo-class-nth-last-of-type",
  "css-pseudo-class-nth-of-type",
  "css-pseudo-class-only-child",
  "css-pseudo-class-only-of-type",
  "css-pseudo-class-target",
  "css-pseudo-class-visited",
  "css-pseudo-element-after",
  "css-pseudo-element-before",
  "css-pseudo-element-first-letter",
  "css-pseudo-element-first-line",
  "css-pseudo-element-marker",
  "css-pseudo-element-placeholder",
  "css-radial-gradient",
  "css-rgb",
  "css-rgba",
  "css-selector-adjacent-sibling",
  "css-selector-attribute",
  "css-selector-chaining",
  "css-selector-child",
  "css-selector-class",
  "css-selector-descendant",
  "css-selector-general-sibling",
  "css-selector-grouping",
  "css-selector-id",
  "css-selector-type",
  "css-selector-universal",
  "css-sytem-ui",
  "css-tab-size",
  "css-table-layout",
  "css-text-align-last",
  "css-text-align",
  "css-text-decoration-color",
  "css-text-decoration-thickness",
  "css-text-decoration",
  "css-text-emphasis-position",
  "css-text-emphasis",
  "css-text-indent",
  "css-text-overflow",
  "css-text-shadow",
  "css-text-transform",
  "css-text-underline-offset",
  "css-transform",
  "css-unit-calc",
  "css-unit-ch",
  "css-unit-cm",
  "css-unit-em",
  "css-unit-ex",
  "css-unit-in",
  "css-unit-initial",
  "css-unit-mm",
  "css-unit-pc",
  "css-unit-percent",
  "css-unit-pt",
  "css-unit-px",
  "css-unit-rem",
  "css-unit-vh",
  "css-unit-vmax",
  "css-unit-vmin",
  "css-unit-vw",
  "css-variables",
  "css-vertical-align",
  "css-visibility",
  "css-white-space",
  "css-width",
  "css-word-break",
  "css-writing-mode",
  "css-z-index",
  "html-address",
  "html-align",
  "html-anchor-links",
  "html-aria-describedby",
  "html-aria-hidden",
  "html-aria-label",
  "html-aria-labelledby",
  "html-aria-live",
  "html-audio",
  "html-background",
  "html-base",
  "html-bdi",
  "html-blockquote",
  "html-body",
  "html-button-reset",
  "html-button-submit",
  "html-del",
  "html-dialog",
  "html-dir",
  "html-div",
  "html-doctype",
  "html-form",
  "html-h1-h6",
  "html-height",
  "html-image-maps",
  "html-input-checkbox",
  "html-input-hidden",
  "html-input-radio",
  "html-input-reset",
  "html-input-submit",
  "html-input-text",
  "html-lang",
  "html-link",
  "html-lists",
  "html-loading-attribute",
  "html-mailto-links",
  "html-marquee",
  "html-meter",
  "html-object",
  "html-p",
  "html-picture",
  "html-progress",
  "html-required",
  "html-role",
  "html-rp",
  "html-rt",
  "html-ruby",
  "html-select",
  "html-semantics",
  "html-small",
  "html-span",
  "html-srcset",
  "html-strike",
  "html-strong",
  "html-style",
  "html-svg",
  "html-table",
  "html-target",
  "html-textarea",
  "html-valign",
  "html-video",
  "html-wbr",
  "html-width",
  "image-apng",
  "image-avif",
  "image-base64",
  "image-bmp",
  "image-gif",
  "image-hdr",
  "image-heif",
  "image-ico",
  "image-jpg",
  "image-mp4",
  "image-png",
  "image-ppm",
  "image-svg",
  "image-tiff",
  "image-webp",
]);
export type Feature = z.infer<typeof Feature>;
